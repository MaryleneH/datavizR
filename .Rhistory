knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
install.packages("kableExtra")
library(kableExtra)
kable(mtcars[1:5, ], "html") %>%
kable_styling("striped") %>%
row_spec(1, color = "red") %>%
save_kable("inst/test.pdf")
library(kableExtra)
kable(mtcars[1:5, ], "html") %>%
kable_styling("striped") %>%
row_spec(1, color = "red") %>%
save_kable("inst/test.pdf")
library(kableExtra)
kable(mtcars[1:5, ], "html") %>%
kable_styling("striped") %>%
row_spec(1, color = "red") %>%
save_kable("test.pdf")
kable(mtcars, "latex") %>%
kable_styling(latex_options = "striped") %>%
save_kable("test.png")
install.packages("magick")
install.packages("magick")
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
kable(mtcars[1:5, ], "html") %>%
kable_styling("striped") %>%
row_spec(1, color = "red") %>%
save_kable("test.pdf")
kable(mtcars, "latex") %>%
kable_styling(latex_options = "striped") %>%
save_kable("test.png")
library(kableExtra)
kable(mtcars[1:5, ], "html") %>%
kable_styling("striped") %>%
row_spec(1, color = "red") %>%
save_kable("test.pdf")
#
# kable(mtcars, "latex") %>%
#   kable_styling(latex_options = "striped") %>%
#   save_kable("test.png")
library(kableExtra)
kable(mtcars[1:5, ], "html") %>%
kable_styling("striped") %>%
row_spec(1, color = "red") %>%
save_kable("test.pdf")
#
# kable(mtcars, "latex") %>%
#   kable_styling(latex_options = "striped") %>%
#   save_kable("test.png")
library(kableExtra)
kable(mtcars[1:5, ], "html") %>%
kable_styling("striped") %>%
row_spec(1, color = "red")
#
# kable(mtcars, "latex") %>%
#   kable_styling(latex_options = "striped") %>%
#   save_kable("test.png")
library(learnr)
install.packages("wordcloud")
install.packages("MASS")
library(ggplot2)
cars_table <- table(mtcars$mpg)
head(cars_table)
str(mtcars)
library(MASS)
str(MASS)
str(Cars93)
mfr_table <- table(Cars93$Manufacturer)
str(anscombe)
?anscombe
getwd()
getwd()
install.packages("xaringan")
#   <font size="6">
#
#   - Langage `R` Base ?
#
#   - Le tidyverse ?
#
#   </font>
#   </div>
#
#   </div>
install.packages("insuranceData")
# Load the insuranceData package
library(insuranceData)
# Use the data() function to load the dataCar data frame
data(dataCar)
# Load the tabplot package
suppressPackageStartupMessages(library(tabplot))
install.packages("tabplot")
# Load the tabplot package
suppressPackageStartupMessages(library(tabplot))
# Generate the default tableplot() display
tableplot(dataCar)
install.packages("tabplot")
install.packages("lattice")
getwd()
str(airquality)
library(lattice)
# Create scatterplot
xyplot(Ozone ~ Temp, data = airquality,
# Add main label
main = "Environmental conditions in New York City (1973)",
# Add axis labels
xlab = "Temperature (Fahrenheit)",
ylab = "Ozone (ppb)")
# Create scatterplot
xyplot(Ozone ~ Temp, data = airquality,
# Add main label
main = "Environmental conditions in New York City (1973)",
# Add axis labels
xlab = "Temperature (Fahrenheit)",
ylab = "Ozone (ppb)", abline = c(0,1))
# Create scatterplot
xyplot(Ozone ~ Temp, data = airquality,
# Add main label
main = "Environmental conditions in New York City (1973)",
# Add axis labels
xlab = "Temperature (Fahrenheit)",
ylab = "Ozone (ppb)", abline = c(1,0))
# Create scatterplot
xyplot(Ozone ~ Temp, data = airquality,
# Add main label
main = "Environmental conditions in New York City (1973)",
# Add axis labels
xlab = "Temperature (Fahrenheit)",
ylab = "Ozone (ppb)", abline = c(0,1))
?xyplot
# Create a density plot
densityplot(~ Ozone, data = airquality,
# Choose how raw data is shown
plot.points = FALSE)
# Create a density plot
densityplot(~ Ozone, data = airquality,
# Choose how raw data is shown
plot.points = T)
# Create a density plot
densityplot(~ Ozone, data = airquality,
# Choose how raw data is shown
plot.points = "jitter")
# 'USCancerRates' is pre-loaded
str(USCancerRates)
install.packages("latticeExtra")
